/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2021-06-09 10:35:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.funding;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class ready4BasicInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/makerNav.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("Basic Info | IF Maker Studio", request.getCharacterEncoding()), out, false);
      out.write('\r');
      out.write('\n');

	Date nowTime = new Date();
	SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");

      out.write("\r\n");
      out.write("\t<form name=\"basicInfo\"\r\n");
      out.write("\t\taction=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/funding/saveBasicInfo\" \r\n");
      out.write("\t\tmethod=\"post\"\r\n");
      out.write("\t\tenctype=\"multipart/form-data\" \r\n");
      out.write("\t\t>\r\n");
      out.write("\t\t<!-- onsubmit=\"return boardValidate();\" -->\r\n");
      out.write("    <div class=\"container p-5\">\r\n");
      out.write("        <h1 class=\"font-weight-bold\">기본 정보</h1>\r\n");
      out.write("        <p>프로젝트를 대표할 주요 기본 정보를 입력하세요.</p>\r\n");
      out.write("        \r\n");
      out.write("        <!--후에 funding_no로 바꿔줄것 -->\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        <input type=\"hidden\" name=\"funding_no\" value=\"17\" />\r\n");
      out.write("        \r\n");
      out.write("        <br>    \r\n");
      out.write("        <h6> 프로젝트 제목</h6>\r\n");
      out.write("        <div class=\"input-group\">\r\n");
      out.write("            <input name=\"title\" type=\"text\" class=\"form-control\" maxlength=\"40\" placeholder=\"제목 입력\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <p>40자 남음</p>\r\n");
      out.write("\r\n");
      out.write("        <br>    \r\n");
      out.write("        <h6> 목표 금액</h6>\r\n");
      out.write("        <p class=\"text-muted\" style=\"font-size:13px\">최소 50만 원 ~ 최대 1억 원으로 설정하세요.</p>\r\n");
      out.write("        <div class=\"input-group\">\r\n");
      out.write("            <input name=\"goal_amount\" type=\"number\" min=\"500000\" max=\"100000000\" class=\"form-control\" placeholder=\"목표 금액 입력\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\r\n");
      out.write("            <span class=\"p-1\">원</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <p>40자 남음</p>\r\n");
      out.write("\r\n");
      out.write("        <br>\r\n");
      out.write("        <h6>대표 이미지</h6>\r\n");
      out.write("\t   \t\r\n");
      out.write("        <div class=\"custom-file\">\r\n");
      out.write("\t        <label for=\"upFile\" class=\"custom-file-label\" for=\"upFile\">등록하기</label>\r\n");
      out.write("\t        <input name=\"upFile\"class=\"custom-file-input\" id=\"upFile\" type=\"file\"  accept=\".jpg, .jpeg, .png\" style=\"display:none\"/>\r\n");
      out.write("        </div>\r\n");
      out.write("        <p class=\"text-muted\">\r\n");
      out.write("            3MB 이하의 JPEG, PNG 파일\r\n");
      out.write("            해상도 1200x675 픽셀 이상\r\n");
      out.write("            텍스트 및 로고 삽입 금지\r\n");
      out.write("        </p>\r\n");
      out.write("        \r\n");
      out.write("\t    <!-- 업로드 했을 때 미리보기 이미지 -->\r\n");
      out.write("    \t<div id=\"imgViewArea\" style=\"margin-top:10px; display:none;\">\r\n");
      out.write("    \t\t<img id=\"imgArea\" style=\"width:200px; height:100px;\" onerror=\"imgAreaError()\"/>\r\n");
      out.write("    \t</div>\r\n");
      out.write("\t\t \r\n");
      out.write("\r\n");
      out.write("        <br>\r\n");
      out.write("        <h6>카테고리</h6>\r\n");
      out.write("        <div class=\"input-group mb-3\">\r\n");
      out.write("            <select class=\"custom-select\" name=\"category_code\">\r\n");
      out.write("<!-- : 테크가전, 푸드, 여행, 스포츠, 게임취미, 모임, 반려동물, 기부후원-->\r\n");
      out.write("              <option selected disabled>카테고리 선택</option>\r\n");
      out.write("              <option value=\"C1\">테크가전</option>\r\n");
      out.write("              <option value=\"C2\">푸드</option>\r\n");
      out.write("              <option value=\"C3\">여행</option>\r\n");
      out.write("              <option value=\"C4\">스포츠</option>\r\n");
      out.write("              <option value=\"C5\">게임취미</option>\r\n");
      out.write("              <option value=\"C6\">모임</option>\r\n");
      out.write("              <option value=\"C7\">반려동물</option>\r\n");
      out.write("              <option value=\"C8\">기부후원</option>\r\n");
      out.write("            </select>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <br>\r\n");
      out.write("        <h6>프로젝트 종료일</h6>\r\n");
      out.write("        <p class=\"text-muted\">\r\n");
      out.write("            요건・콘텐츠 확인 및 프로젝트 진행 일정과 리워드 발송 일정을 함께 고려하여 종료일을 설정해주세요.\r\n");
      out.write("        </p>\r\n");
      out.write("        <div class=\"form-group row\">\r\n");
      out.write("\t\t    <input class=\"form-control ml-3\" type=\"date\" value=\"");
      out.print(sf.format(nowTime));
      out.write("\" name=\"d_day\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("        \r\n");
      out.write("        <br><br>\r\n");
      out.write("        <!-- 성인인증과 검색용 태그는 논의 후에 집어넣을 것 -->\r\n");
      out.write("        <input type=\"submit\" class=\"btn btn-primary btn-lg\" style=\"width: 200px;\" value=\"시작하기\"/>\r\n");
      out.write("<!--         <button type=\"button\" class=\"btn btn-primary btn-lg\" style=\"width: 200px;\" onclick=\"saveBasicInfo()\">시작하기</button> -->\r\n");
      out.write("    </div>\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("</section>\r\n");
      out.write("<script>\r\n");
      out.write("$(() =>{\r\n");
      out.write("\t$(\"[name=upFile]\").change(e =>{\r\n");
      out.write("\t\t//파일명 가져오기\r\n");
      out.write("\t\tvar file = $(e.target).prop('files')[0];\r\n");
      out.write("\t\tconsole.log(file);\r\n");
      out.write("\t\t/* var $label = $(e.target).next();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//label 적용\r\n");
      out.write("\t\t$label.html(file? file.name:\"파일을 선택하세요\"); */\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* function saveBasicInfo(){\r\n");
      out.write("\r\n");
      out.write("\tconst funding_no = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${funding.funding_no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\tconst form = $(\"#basicInfo\")[0];\r\n");
      out.write("\tconst $frm = $(\"#basicInfo\");\r\n");
      out.write("\tconst formData = new FormData(form);\r\n");
      out.write("\tconsole.log(formData);\r\n");
      out.write("\t\r\n");
      out.write("\tconst title = $frm.find(\"[name = title]\").val();\r\n");
      out.write("\tconst goal_amount = $frm.find(\"[name = goal_amount]\").val();\r\n");
      out.write("\tconst category_code = $(\"#makerCategory option:selected\").val();\r\n");
      out.write("\tconst d_day = $frm.find(\"[name = d_day]\").val();\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tconst funding ={\r\n");
      out.write("\t\t\tfunding_no,\r\n");
      out.write("\t\t\ttitle,\r\n");
      out.write("\t\t\tgoal_amount,\r\n");
      out.write("\t\t\tcategory_code,\r\n");
      out.write("\t\t\td_day,\r\n");
      out.write("\t\t\tformData\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\tconsole.log(funding);\r\n");
      out.write("    \r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/funding/saveBasicInfo`,\r\n");
      out.write("\t\tcontentType: \"application/json; charset=utf-8\",\r\n");
      out.write("\t\tdata:  JSON.stringify(funding),\r\n");
      out.write("\t    enctype: 'multipart/form-data',\r\n");
      out.write("\t\tdataType:'json',\r\n");
      out.write("\t\tcontentType : false,\r\n");
      out.write("        processData : false,\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tmethod: \"put\",\r\n");
      out.write("\t\tsuccess(data){\r\n");
      out.write("\t\t\tconsole.log(data);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: console.log\r\n");
      out.write("\t\t});\r\n");
      out.write("}; */\r\n");
      out.write("\r\n");
      out.write("/* function basicInfoValidate(){\r\n");
      out.write("\tvar $projectTitle = $(\"[name=title]\");\r\n");
      out.write("\tif(/^(.|\\n)+$/.test($title.val()) == false){\r\n");
      out.write("\t\talert(\"제목을 입력하세요\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar $goal_amount = $(\"[name=goal_amount]\");\r\n");
      out.write("\tif(/^(.|\\n)+$/.test($goal_amount.val()) == false){\r\n");
      out.write("\t\talert(\"목표금액을 입력하세요\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar $projectTitle = $(\"[name=projectTitle]\");\r\n");
      out.write("\tif(/^(.|\\n)+$/.test($projectTitle.val()) == false){\r\n");
      out.write("\t\talert(\"제목을 입력하세요\");\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\treturn true;\r\n");
      out.write("}; */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//이미지 미리보기\r\n");
      out.write("//콘텐츠 수정 :: 사진 수정 시 이미지 미리보기\r\n");
      out.write("function readURL(input) {\r\n");
      out.write("\tif (input.files && input.files[0]) {\r\n");
      out.write("\t\tvar reader = new FileReader();\r\n");
      out.write("\t\treader.onload = function(e) {\r\n");
      out.write("\t\t\t$('#imgArea').attr('src', e.target.result); \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treader.readAsDataURL(input.files[0]);\r\n");
      out.write("\t}\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("$(\":input[name='upFile']\").change(function() {\r\n");
      out.write("\tif( $(\":input[name='upFile']\").val() == '' ) {\r\n");
      out.write("\t\t$('#imgArea').attr('src' , '');  \r\n");
      out.write("\t}\r\n");
      out.write("\t$('#imgViewArea').css({ 'display' : '' });\r\n");
      out.write("\treadURL(this);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("// 이미지 에러 시 미리보기영역 미노출\r\n");
      out.write("function imgAreaError(){\r\n");
      out.write("\t$('#imgViewArea').css({ 'display' : 'none' });\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
