/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.44
 * Generated at: 2021-06-07 10:36:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.maker;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class fundingStart1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1622798345519L));
    _jspx_dependants.put("jar:file:/C:/Users/rojoo/git/interact_funding/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Users/rojoo/git/interact_funding/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Users/rojoo/git/interact_funding/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Start1 | IF Maker Studio</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("\t<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <section>\r\n");
      out.write("    <form id=\"insertMakerInfo\">\r\n");
      out.write("        <div class =\"container p-5\">\r\n");
      out.write("            <h1>메이커 정보</h1>\r\n");
      out.write("            <p>안녕하세요 메이커님, 본격적으로 프로젝트 작성을 시작하기 전에 간단한 정보를 입력하세요</p>\r\n");
      out.write("            \r\n");
      out.write("            <p class=\"font-weight-bold\">관리자 명</p>\r\n");
      out.write("            <div class=\"input-group mb-3\">\r\n");
      out.write("                  <!-- 회원정보를 받아와서 value에 회원의 이름을 넣을 것 -->\r\n");
      out.write("                <input type=\"text\" name =\"makerName\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" readonly>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <p class=\"font-weight-bold\">관리자 이메일</p>\r\n");
      out.write("            <div class=\"input-group mb-3\">\r\n");
      out.write("                <!-- 회원정보를 받아와서 value에 회원의 이메일을 넣을 것 -->\r\n");
      out.write("              <input type=\"text\" name=\"makerEmail\" class=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" readonly>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <p class=\"font-weight-bold\">관리자 휴대전화</p>\r\n");
      out.write("            <!-- 인증을 완료했을 경우 -->\r\n");
      out.write("            <div class=\"input-group mb-3\">\r\n");
      out.write("                <!-- 회원정보를 받아와서 value에 휴대전화 번호를 넣을 것 -->\r\n");
      out.write("                <input type=\"text\" name=\"makerPhone\" class=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">\r\n");
      out.write("                <div class=\"input-group-append\">\r\n");
      out.write("                    <!-- 변경을 클릭하면 인증하기로 바뀔 것 | 인증하기를 클릭하면 재전송으로 바뀔것 -->\r\n");
      out.write("                    <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">변경</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <p class=\"font-weight-normal\">인증을 완료한 회원입니다</p>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            <!-- 인증하기를 클릭해서 인증할 경우 -->\r\n");
      out.write("            <div class=\"input-group mb-3\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" placeholder=\"인증번호 입력\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\">\r\n");
      out.write("                <div class=\"input-group-append\">\r\n");
      out.write("                  <button class=\"btn btn-outline-secondary\" type=\"button\">인증하기</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <br><br><br>\r\n");
      out.write("            <div class=\"input-group mb-3\">\r\n");
      out.write("                <div class=\"input-group-prepend\">\r\n");
      out.write("                    <div class=\"input-group-text\">\r\n");
      out.write("                        <input type=\"checkbox\" value aria-label=\"Checkbox for following text input\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <label type=\"text\" class=\"form-control\" aria-label=\"Text input with checkbox\">(필수) 개인 정보 수집 동의\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-group mb-3\">\r\n");
      out.write("                <div class=\"input-group-prepend \">\r\n");
      out.write("                    <div class=\"input-group-text \">\r\n");
      out.write("                        <input type=\"checkbox\"  aria-label=\"Checkbox for following text input\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <label type=\"text\" class=\"form-control\" aria-label=\"Text input with checkbox\" >(선택) 와디즈 메이커를 위한 유용한 뉴스레터 받기\r\n");
      out.write("            </div>\r\n");
      out.write("            <input type=\"submit\" class=\"btn btn-primary btn-lg\" value=\"시작하기\"/>\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("    </section>\r\n");
      out.write("    \r\n");
      out.write("<script>\r\n");
      out.write("$(\"#insertMakerInfo\").submit(e =>{\r\n");
      out.write("\te.preventDefault(); //폼제출 방지\r\n");
      out.write("\tconst $frm = $(e.target);\r\n");
      out.write("\tconst makerName = $frm.find(\"[name=makerName]\").val();\r\n");
      out.write("\tconst makerEmail = $frm.find(\"[name=makerEmail]\").val();\r\n");
      out.write("\tconst makerPhone = $frm.find(\"[name=makerPhone]\").val();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tconst makerInfo ={\r\n");
      out.write("\t\tmakerName,\r\n");
      out.write("\t\tmakerEmail,\r\n");
      out.write("\t\tmakerPhone\r\n");
      out.write("\t\t\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\tconsole.log(makerInfo);\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/maker/insertMakerInfo\",\r\n");
      out.write("\t\tdata: JSON.stringify(makerInfo),\r\n");
      out.write("\t\tcontentType: \"application/json; charset=utf-8\",\r\n");
      out.write("\t\tmethod: \"POST\",\r\n");
      out.write("\t\tsuccess(data){\r\n");
      out.write("\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\tconst {msg} = data;\r\n");
      out.write("\t\t\talert(msg);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: console.log,\r\n");
      out.write("\t\tcomplete(){\r\n");
      out.write("\t\t\te.target.reset(); //폼초기화\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write(" \r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
